{
	"id": "3922459c39ef9ccb6d3e0df2da595d48",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"class_hands_on/do_while.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract LoopExamples {\r\n    \r\n    // Function using a while loop to count down to zero\r\n    function countDown(uint start) public pure returns (uint) {\r\n        uint count = start;\r\n        while (count > 0) {\r\n            count--;\r\n        }\r\n        return count; // Always returns 0\r\n    }\r\n\r\n    // Function using a do-while loop to count down to zero\r\n    function doWhileExample(uint start) public pure returns (uint) {\r\n        uint count = start;\r\n        if (start > 0) {\r\n            do {\r\n                count--;\r\n            } while (count > 0);\r\n        }\r\n        return count; // Always returns 0\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"class_hands_on/do_while.sol": {
				"LoopExamples": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								}
							],
							"name": "countDown",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								}
							],
							"name": "doWhileExample",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"class_hands_on/do_while.sol\":60:683  contract LoopExamples {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"class_hands_on/do_while.sol\":60:683  contract LoopExamples {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3b396421\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x84e07da1\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"class_hands_on/do_while.sol\":153:353  function countDown(uint start) public pure returns (uint) {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"class_hands_on/do_while.sol\":422:680  function doWhileExample(uint start) public pure returns (uint) {... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_12:\n      tag_13\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"class_hands_on/do_while.sol\":153:353  function countDown(uint start) public pure returns (uint) {... */\n    tag_8:\n        /* \"class_hands_on/do_while.sol\":205:209  uint */\n      0x00\n        /* \"class_hands_on/do_while.sol\":222:232  uint count */\n      dup1\n        /* \"class_hands_on/do_while.sol\":235:240  start */\n      dup3\n        /* \"class_hands_on/do_while.sol\":222:240  uint count = start */\n      swap1\n      pop\n        /* \"class_hands_on/do_while.sol\":251:303  while (count > 0) {... */\n    tag_16:\n        /* \"class_hands_on/do_while.sol\":266:267  0 */\n      0x00\n        /* \"class_hands_on/do_while.sol\":258:263  count */\n      dup2\n        /* \"class_hands_on/do_while.sol\":258:267  count > 0 */\n      gt\n        /* \"class_hands_on/do_while.sol\":251:303  while (count > 0) {... */\n      iszero\n      tag_17\n      jumpi\n        /* \"class_hands_on/do_while.sol\":284:291  count-- */\n      dup1\n      dup1\n      tag_18\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      swap2\n      pop\n      pop\n        /* \"class_hands_on/do_while.sol\":251:303  while (count > 0) {... */\n      jump(tag_16)\n    tag_17:\n        /* \"class_hands_on/do_while.sol\":320:325  count */\n      dup1\n        /* \"class_hands_on/do_while.sol\":313:325  return count */\n      swap2\n      pop\n      pop\n        /* \"class_hands_on/do_while.sol\":153:353  function countDown(uint start) public pure returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"class_hands_on/do_while.sol\":422:680  function doWhileExample(uint start) public pure returns (uint) {... */\n    tag_13:\n        /* \"class_hands_on/do_while.sol\":479:483  uint */\n      0x00\n        /* \"class_hands_on/do_while.sol\":496:506  uint count */\n      dup1\n        /* \"class_hands_on/do_while.sol\":509:514  start */\n      dup3\n        /* \"class_hands_on/do_while.sol\":496:514  uint count = start */\n      swap1\n      pop\n        /* \"class_hands_on/do_while.sol\":537:538  0 */\n      0x00\n        /* \"class_hands_on/do_while.sol\":529:534  start */\n      dup4\n        /* \"class_hands_on/do_while.sol\":529:538  start > 0 */\n      gt\n        /* \"class_hands_on/do_while.sol\":525:630  if (start > 0) {... */\n      iszero\n      tag_21\n      jumpi\n        /* \"class_hands_on/do_while.sol\":555:619  do {... */\n    tag_22:\n        /* \"class_hands_on/do_while.sol\":577:584  count-- */\n      dup1\n      dup1\n      tag_25\n      swap1\n      tag_19\n      jump\t// in\n    tag_25:\n      swap2\n      pop\n      pop\n        /* \"class_hands_on/do_while.sol\":616:617  0 */\n      0x00\n        /* \"class_hands_on/do_while.sol\":608:613  count */\n      dup2\n        /* \"class_hands_on/do_while.sol\":608:617  count > 0 */\n      gt\n        /* \"class_hands_on/do_while.sol\":555:619  do {... */\n      tag_22\n      jumpi\n        /* \"class_hands_on/do_while.sol\":525:630  if (start > 0) {... */\n    tag_21:\n        /* \"class_hands_on/do_while.sol\":647:652  count */\n      dup1\n        /* \"class_hands_on/do_while.sol\":640:652  return count */\n      swap2\n      pop\n      pop\n        /* \"class_hands_on/do_while.sol\":422:680  function doWhileExample(uint start) public pure returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_27:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_29:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_30:\n        /* \"#utility.yul\":490:514   */\n      tag_40\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_29\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_41\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_41:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_31:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_43\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_30\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_7:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_45\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_46\n      tag_27\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":766:885   */\n    tag_45:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_47\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_31\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_32:\n        /* \"#utility.yul\":1112:1136   */\n      tag_49\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_29\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_10:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_51\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_32\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1557   */\n    tag_33:\n        /* \"#utility.yul\":1425:1502   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1422:1423   */\n      0x00\n        /* \"#utility.yul\":1415:1503   */\n      mstore\n        /* \"#utility.yul\":1522:1526   */\n      0x11\n        /* \"#utility.yul\":1519:1520   */\n      0x04\n        /* \"#utility.yul\":1512:1527   */\n      mstore\n        /* \"#utility.yul\":1546:1550   */\n      0x24\n        /* \"#utility.yul\":1543:1544   */\n      0x00\n        /* \"#utility.yul\":1536:1551   */\n      revert\n        /* \"#utility.yul\":1563:1734   */\n    tag_19:\n        /* \"#utility.yul\":1602:1605   */\n      0x00\n        /* \"#utility.yul\":1625:1649   */\n      tag_54\n        /* \"#utility.yul\":1643:1648   */\n      dup3\n        /* \"#utility.yul\":1625:1649   */\n      tag_29\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1616:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1671:1675   */\n      0x00\n        /* \"#utility.yul\":1664:1669   */\n      dup3\n        /* \"#utility.yul\":1661:1676   */\n      sub\n        /* \"#utility.yul\":1658:1699   */\n      tag_55\n      jumpi\n        /* \"#utility.yul\":1679:1697   */\n      tag_56\n      tag_33\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1658:1699   */\n    tag_55:\n        /* \"#utility.yul\":1726:1727   */\n      0x01\n        /* \"#utility.yul\":1719:1724   */\n      dup3\n        /* \"#utility.yul\":1715:1728   */\n      sub\n        /* \"#utility.yul\":1708:1728   */\n      swap1\n      pop\n        /* \"#utility.yul\":1563:1734   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201d0dc67cc7d12209fcf6f9e289457fcde1b05a7574e728fab02f7d015732a60064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506102038061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c80633b3964211461003857806384e07da114610068575b5f80fd5b610052600480360381019061004d9190610126565b610098565b60405161005f9190610160565b60405180910390f35b610082600480360381019061007d9190610126565b6100c2565b60405161008f9190610160565b60405180910390f35b5f808290505b5f8111156100b95780806100b1906101a6565b91505061009e565b80915050919050565b5f808290505f8311156100e6575b80806100db906101a6565b9150505f81116100d0575b80915050919050565b5f80fd5b5f819050919050565b610105816100f3565b811461010f575f80fd5b50565b5f81359050610120816100fc565b92915050565b5f6020828403121561013b5761013a6100ef565b5b5f61014884828501610112565b91505092915050565b61015a816100f3565b82525050565b5f6020820190506101735f830184610151565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6101b0826100f3565b91505f82036101c2576101c1610179565b5b60018203905091905056fea26469706673582212201d0dc67cc7d12209fcf6f9e289457fcde1b05a7574e728fab02f7d015732a60064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x203 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3B396421 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0x84E07DA1 EQ PUSH2 0x68 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x126 JUMP JUMPDEST PUSH2 0x98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F SWAP2 SWAP1 PUSH2 0x160 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7D SWAP2 SWAP1 PUSH2 0x126 JUMP JUMPDEST PUSH2 0xC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x160 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0xB9 JUMPI DUP1 DUP1 PUSH2 0xB1 SWAP1 PUSH2 0x1A6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH0 DUP4 GT ISZERO PUSH2 0xE6 JUMPI JUMPDEST DUP1 DUP1 PUSH2 0xDB SWAP1 PUSH2 0x1A6 JUMP JUMPDEST SWAP2 POP POP PUSH0 DUP2 GT PUSH2 0xD0 JUMPI JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x105 DUP2 PUSH2 0xF3 JUMP JUMPDEST DUP2 EQ PUSH2 0x10F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x120 DUP2 PUSH2 0xFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B JUMPI PUSH2 0x13A PUSH2 0xEF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x148 DUP5 DUP3 DUP6 ADD PUSH2 0x112 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15A DUP2 PUSH2 0xF3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x173 PUSH0 DUP4 ADD DUP5 PUSH2 0x151 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1B0 DUP3 PUSH2 0xF3 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x1C2 JUMPI PUSH2 0x1C1 PUSH2 0x179 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0xD 0xC6 PUSH29 0xC7D12209FCF6F9E289457FCDE1B05A7574E728FAB02F7D015732A60064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "60:623:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@countDown_23": {
									"entryPoint": 152,
									"id": 23,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@doWhileExample_50": {
									"entryPoint": 194,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"decrement_t_uint256": {
									"entryPoint": 422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 377,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 239,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1737:1",
										"nodeType": "YulBlock",
										"src": "0:1737:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:32:1",
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nativeSrc": "389:16:1",
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:1",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nativeSrc": "460:79:1",
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:1",
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:1",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:1",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nativeSrc": "519:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nativeSrc": "519:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nativeSrc": "490:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nativeSrc": "480:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nativeSrc": "473:43:1",
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nativeSrc": "470:63:1",
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:1",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nativeSrc": "597:87:1",
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nativeSrc": "607:29:1",
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nativeSrc": "616:20:1",
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nativeSrc": "645:33:1",
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nativeSrc": "645:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:1",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:1",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:1",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nativeSrc": "756:263:1",
													"nodeType": "YulBlock",
													"src": "756:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:1",
																"nodeType": "YulBlock",
																"src": "802:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:1"
																			},
																			"nativeSrc": "804:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:1"
																		},
																		"nativeSrc": "804:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nativeSrc": "773:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:1",
																		"nodeType": "YulLiteral",
																		"src": "798:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:1"
																},
																"nativeSrc": "769:32:1",
																"nodeType": "YulFunctionCall",
																"src": "769:32:1"
															},
															"nativeSrc": "766:119:1",
															"nodeType": "YulIf",
															"src": "766:119:1"
														},
														{
															"nativeSrc": "895:117:1",
															"nodeType": "YulBlock",
															"src": "895:117:1",
															"statements": [
																{
																	"nativeSrc": "910:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:1",
																		"nodeType": "YulLiteral",
																		"src": "924:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:1",
																			"nodeType": "YulTypedName",
																			"src": "914:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:1",
																	"nodeType": "YulAssignment",
																	"src": "939:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:1"
																				},
																				"nativeSrc": "970:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:1"
																		},
																		"nativeSrc": "949:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:1",
														"nodeType": "YulTypedName",
														"src": "726:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:1",
														"nodeType": "YulTypedName",
														"src": "737:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:1",
														"nodeType": "YulTypedName",
														"src": "749:6:1",
														"type": ""
													}
												],
												"src": "690:329:1"
											},
											{
												"body": {
													"nativeSrc": "1090:53:1",
													"nodeType": "YulBlock",
													"src": "1090:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1107:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1130:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1112:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:1"
																		},
																		"nativeSrc": "1112:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1100:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:1"
																},
																"nativeSrc": "1100:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1100:37:1"
															},
															"nativeSrc": "1100:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1025:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1078:5:1",
														"nodeType": "YulTypedName",
														"src": "1078:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1085:3:1",
														"nodeType": "YulTypedName",
														"src": "1085:3:1",
														"type": ""
													}
												],
												"src": "1025:118:1"
											},
											{
												"body": {
													"nativeSrc": "1247:124:1",
													"nodeType": "YulBlock",
													"src": "1247:124:1",
													"statements": [
														{
															"nativeSrc": "1257:26:1",
															"nodeType": "YulAssignment",
															"src": "1257:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1269:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1280:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1265:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:1"
																},
																"nativeSrc": "1265:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1265:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1257:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1337:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1350:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1361:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1346:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:1"
																		},
																		"nativeSrc": "1346:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1293:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:1"
																},
																"nativeSrc": "1293:71:1",
																"nodeType": "YulFunctionCall",
																"src": "1293:71:1"
															},
															"nativeSrc": "1293:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1149:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1219:9:1",
														"nodeType": "YulTypedName",
														"src": "1219:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1231:6:1",
														"nodeType": "YulTypedName",
														"src": "1231:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1242:4:1",
														"nodeType": "YulTypedName",
														"src": "1242:4:1",
														"type": ""
													}
												],
												"src": "1149:222:1"
											},
											{
												"body": {
													"nativeSrc": "1405:152:1",
													"nodeType": "YulBlock",
													"src": "1405:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1422:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1422:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1425:77:1",
																		"nodeType": "YulLiteral",
																		"src": "1425:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1415:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1415:6:1"
																},
																"nativeSrc": "1415:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1415:88:1"
															},
															"nativeSrc": "1415:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1415:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1519:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1519:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1522:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1522:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1512:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1512:6:1"
																},
																"nativeSrc": "1512:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1512:15:1"
															},
															"nativeSrc": "1512:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1512:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1543:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1543:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1546:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1546:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1536:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:1"
																},
																"nativeSrc": "1536:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1536:15:1"
															},
															"nativeSrc": "1536:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1536:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1377:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1377:180:1"
											},
											{
												"body": {
													"nativeSrc": "1606:128:1",
													"nodeType": "YulBlock",
													"src": "1606:128:1",
													"statements": [
														{
															"nativeSrc": "1616:33:1",
															"nodeType": "YulAssignment",
															"src": "1616:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1643:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1643:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1625:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1625:17:1"
																},
																"nativeSrc": "1625:24:1",
																"nodeType": "YulFunctionCall",
																"src": "1625:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1616:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1616:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1677:22:1",
																"nodeType": "YulBlock",
																"src": "1677:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1679:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1679:16:1"
																			},
																			"nativeSrc": "1679:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1679:18:1"
																		},
																		"nativeSrc": "1679:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1679:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1664:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1664:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1671:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1671:4:1",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1661:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1661:2:1"
																},
																"nativeSrc": "1661:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1661:15:1"
															},
															"nativeSrc": "1658:41:1",
															"nodeType": "YulIf",
															"src": "1658:41:1"
														},
														{
															"nativeSrc": "1708:20:1",
															"nodeType": "YulAssignment",
															"src": "1708:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1719:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1719:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1726:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1726:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1715:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1715:3:1"
																},
																"nativeSrc": "1715:13:1",
																"nodeType": "YulFunctionCall",
																"src": "1715:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1708:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1708:3:1"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "1563:171:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1592:5:1",
														"nodeType": "YulTypedName",
														"src": "1592:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1602:3:1",
														"nodeType": "YulTypedName",
														"src": "1602:3:1",
														"type": ""
													}
												],
												"src": "1563:171:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610034575f3560e01c80633b3964211461003857806384e07da114610068575b5f80fd5b610052600480360381019061004d9190610126565b610098565b60405161005f9190610160565b60405180910390f35b610082600480360381019061007d9190610126565b6100c2565b60405161008f9190610160565b60405180910390f35b5f808290505b5f8111156100b95780806100b1906101a6565b91505061009e565b80915050919050565b5f808290505f8311156100e6575b80806100db906101a6565b9150505f81116100d0575b80915050919050565b5f80fd5b5f819050919050565b610105816100f3565b811461010f575f80fd5b50565b5f81359050610120816100fc565b92915050565b5f6020828403121561013b5761013a6100ef565b5b5f61014884828501610112565b91505092915050565b61015a816100f3565b82525050565b5f6020820190506101735f830184610151565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6101b0826100f3565b91505f82036101c2576101c1610179565b5b60018203905091905056fea26469706673582212201d0dc67cc7d12209fcf6f9e289457fcde1b05a7574e728fab02f7d015732a60064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3B396421 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0x84E07DA1 EQ PUSH2 0x68 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x126 JUMP JUMPDEST PUSH2 0x98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F SWAP2 SWAP1 PUSH2 0x160 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7D SWAP2 SWAP1 PUSH2 0x126 JUMP JUMPDEST PUSH2 0xC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x160 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0xB9 JUMPI DUP1 DUP1 PUSH2 0xB1 SWAP1 PUSH2 0x1A6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH0 DUP4 GT ISZERO PUSH2 0xE6 JUMPI JUMPDEST DUP1 DUP1 PUSH2 0xDB SWAP1 PUSH2 0x1A6 JUMP JUMPDEST SWAP2 POP POP PUSH0 DUP2 GT PUSH2 0xD0 JUMPI JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x105 DUP2 PUSH2 0xF3 JUMP JUMPDEST DUP2 EQ PUSH2 0x10F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x120 DUP2 PUSH2 0xFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B JUMPI PUSH2 0x13A PUSH2 0xEF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x148 DUP5 DUP3 DUP6 ADD PUSH2 0x112 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15A DUP2 PUSH2 0xF3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x173 PUSH0 DUP4 ADD DUP5 PUSH2 0x151 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1B0 DUP3 PUSH2 0xF3 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x1C2 JUMPI PUSH2 0x1C1 PUSH2 0x179 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0xD 0xC6 PUSH29 0xC7D12209FCF6F9E289457FCDE1B05A7574E728FAB02F7D015732A60064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "60:623:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;153:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;422:258;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;153:200;205:4;222:10;235:5;222:18;;251:52;266:1;258:5;:9;251:52;;;284:7;;;;;:::i;:::-;;;;251:52;;;320:5;313:12;;;153:200;;;:::o;422:258::-;479:4;496:10;509:5;496:18;;537:1;529:5;:9;525:105;;;555:64;577:7;;;;;:::i;:::-;;;;616:1;608:5;:9;555:64;;525:105;647:5;640:12;;;422:258;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:180::-;1425:77;1422:1;1415:88;1522:4;1519:1;1512:15;1546:4;1543:1;1536:15;1563:171;1602:3;1625:24;1643:5;1625:24;:::i;:::-;1616:33;;1671:4;1664:5;1661:15;1658:41;;1679:18;;:::i;:::-;1658:41;1726:1;1719:5;1715:13;1708:20;;1563:171;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "103000",
								"executionCost": "151",
								"totalCost": "103151"
							},
							"external": {
								"countDown(uint256)": "infinite",
								"doWhileExample(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 683,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 683,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 683,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 683,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 683,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 683,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 60,
									"end": 683,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 683,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 683,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 683,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 683,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 683,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 683,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 683,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 683,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 683,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 683,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 683,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 683,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 683,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 683,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201d0dc67cc7d12209fcf6f9e289457fcde1b05a7574e728fab02f7d015732a60064736f6c634300081a0033",
									".code": [
										{
											"begin": 60,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 683,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 683,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 683,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 683,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 683,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 683,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 683,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 683,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "3B396421"
										},
										{
											"begin": 60,
											"end": 683,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "84E07DA1"
										},
										{
											"begin": 60,
											"end": 683,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 683,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 683,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 153,
											"end": 353,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 153,
											"end": 353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 153,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 153,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 153,
											"end": 353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 153,
											"end": 353,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 153,
											"end": 353,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 153,
											"end": 353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 153,
											"end": 353,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 153,
											"end": 353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 153,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 153,
											"end": 353,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 153,
											"end": 353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 153,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 153,
											"end": 353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 153,
											"end": 353,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 153,
											"end": 353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 153,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 153,
											"end": 353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 153,
											"end": 353,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 153,
											"end": 353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 153,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 153,
											"end": 353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 153,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 153,
											"end": 353,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 153,
											"end": 353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 153,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 153,
											"end": 353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 153,
											"end": 353,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 153,
											"end": 353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 153,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 153,
											"end": 353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 153,
											"end": 353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 153,
											"end": 353,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 153,
											"end": 353,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 153,
											"end": 353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 153,
											"end": 353,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 422,
											"end": 680,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 422,
											"end": 680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 422,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 422,
											"end": 680,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 422,
											"end": 680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 422,
											"end": 680,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 422,
											"end": 680,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 422,
											"end": 680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 422,
											"end": 680,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 422,
											"end": 680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 422,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 422,
											"end": 680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 422,
											"end": 680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 422,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 422,
											"end": 680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 422,
											"end": 680,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 422,
											"end": 680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 422,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 422,
											"end": 680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 422,
											"end": 680,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 422,
											"end": 680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 422,
											"end": 680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 422,
											"end": 680,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 422,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 422,
											"end": 680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 422,
											"end": 680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 422,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 422,
											"end": 680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 422,
											"end": 680,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 422,
											"end": 680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 422,
											"end": 680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 422,
											"end": 680,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 422,
											"end": 680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 422,
											"end": 680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 422,
											"end": 680,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 422,
											"end": 680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 422,
											"end": 680,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 153,
											"end": 353,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 153,
											"end": 353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 205,
											"end": 209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 222,
											"end": 232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 235,
											"end": 240,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 222,
											"end": 240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 222,
											"end": 240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 251,
											"end": 303,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 251,
											"end": 303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 258,
											"end": 267,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 251,
											"end": 303,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 251,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 251,
											"end": 303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 284,
											"end": 291,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 284,
											"end": 291,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 284,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 284,
											"end": 291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 284,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 284,
											"end": 291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 284,
											"end": 291,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 284,
											"end": 291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 284,
											"end": 291,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 284,
											"end": 291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 284,
											"end": 291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 251,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 251,
											"end": 303,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 251,
											"end": 303,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 251,
											"end": 303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 320,
											"end": 325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 313,
											"end": 325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 313,
											"end": 325,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 313,
											"end": 325,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 153,
											"end": 353,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 153,
											"end": 353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 153,
											"end": 353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 153,
											"end": 353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 422,
											"end": 680,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 422,
											"end": 680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 479,
											"end": 483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 509,
											"end": 514,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 496,
											"end": 514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 496,
											"end": 514,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 537,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 529,
											"end": 534,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 529,
											"end": 538,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 525,
											"end": 630,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 525,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 525,
											"end": 630,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 555,
											"end": 619,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 555,
											"end": 619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 577,
											"end": 584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 577,
											"end": 584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 577,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 577,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 577,
											"end": 584,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 577,
											"end": 584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 577,
											"end": 584,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 577,
											"end": 584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 577,
											"end": 584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 616,
											"end": 617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 608,
											"end": 613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 608,
											"end": 617,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 555,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 555,
											"end": 619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 525,
											"end": 630,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 525,
											"end": 630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 647,
											"end": 652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 640,
											"end": 652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 422,
											"end": 680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 422,
											"end": 680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 422,
											"end": 680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 422,
											"end": 680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1557,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1377,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1425,
											"end": 1502,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1422,
											"end": 1423,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1519,
											"end": 1520,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 1527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1550,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1543,
											"end": 1544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1551,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1734,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1563,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1643,
											"end": 1648,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1625,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1625,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1625,
											"end": 1649,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1625,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1649,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1675,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1664,
											"end": 1669,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1676,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1658,
											"end": 1699,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1679,
											"end": 1697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1658,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1727,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1719,
											"end": 1724,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1728,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1708,
											"end": 1728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1708,
											"end": 1728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1734,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1734,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1734,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"class_hands_on/do_while.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"countDown(uint256)": "3b396421",
							"doWhileExample(uint256)": "84e07da1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"}],\"name\":\"countDown\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"}],\"name\":\"doWhileExample\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"class_hands_on/do_while.sol\":\"LoopExamples\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"class_hands_on/do_while.sol\":{\"keccak256\":\"0x6fffe980192ab10972a847d923018c9e02c0e104c2342378ca646b624b4be654\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb610d2fbb98fda08be6e38756902ceb30ff9af7e434f3dc5eb79b73e827b6a8\",\"dweb:/ipfs/QmXPe3cKakBBHqkxuwthW2T6KrvMqq9MD1ed15q4yZ6fGL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"class_hands_on/do_while.sol": {
				"ast": {
					"absolutePath": "class_hands_on/do_while.sol",
					"exportedSymbols": {
						"LoopExamples": [
							51
						]
					},
					"id": 52,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LoopExamples",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 51,
							"linearizedBaseContracts": [
								51
							],
							"name": "LoopExamples",
							"nameLocation": "69:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "211:142:0",
										"statements": [
											{
												"assignments": [
													9
												],
												"declarations": [
													{
														"constant": false,
														"id": 9,
														"mutability": "mutable",
														"name": "count",
														"nameLocation": "227:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 22,
														"src": "222:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 8,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "222:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 11,
												"initialValue": {
													"id": 10,
													"name": "start",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "235:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "222:18:0"
											},
											{
												"body": {
													"id": 18,
													"nodeType": "Block",
													"src": "269:34:0",
													"statements": [
														{
															"expression": {
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "--",
																"prefix": false,
																"src": "284:7:0",
																"subExpression": {
																	"id": 15,
																	"name": "count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "284:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 17,
															"nodeType": "ExpressionStatement",
															"src": "284:7:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 12,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "258:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "266:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "258:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 19,
												"nodeType": "WhileStatement",
												"src": "251:52:0"
											},
											{
												"expression": {
													"id": 20,
													"name": "count",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 9,
													"src": "320:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 7,
												"id": 21,
												"nodeType": "Return",
												"src": "313:12:0"
											}
										]
									},
									"functionSelector": "3b396421",
									"id": 23,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "countDown",
									"nameLocation": "162:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "177:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "172:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "172:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "171:12:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "205:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "205:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "204:6:0"
									},
									"scope": 51,
									"src": "153:200:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "485:195:0",
										"statements": [
											{
												"assignments": [
													31
												],
												"declarations": [
													{
														"constant": false,
														"id": 31,
														"mutability": "mutable",
														"name": "count",
														"nameLocation": "501:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 49,
														"src": "496:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 30,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "496:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 33,
												"initialValue": {
													"id": 32,
													"name": "start",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "509:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "496:18:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 34,
														"name": "start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "529:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "537:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "529:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 46,
												"nodeType": "IfStatement",
												"src": "525:105:0",
												"trueBody": {
													"id": 45,
													"nodeType": "Block",
													"src": "540:90:0",
													"statements": [
														{
															"body": {
																"id": 40,
																"nodeType": "Block",
																"src": "558:42:0",
																"statements": [
																	{
																		"expression": {
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "--",
																			"prefix": false,
																			"src": "577:7:0",
																			"subExpression": {
																				"id": 37,
																				"name": "count",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 31,
																				"src": "577:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 39,
																		"nodeType": "ExpressionStatement",
																		"src": "577:7:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 43,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 41,
																	"name": "count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "608:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 42,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "616:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "608:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 44,
															"nodeType": "DoWhileStatement",
															"src": "555:64:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 47,
													"name": "count",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 31,
													"src": "647:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 29,
												"id": 48,
												"nodeType": "Return",
												"src": "640:12:0"
											}
										]
									},
									"functionSelector": "84e07da1",
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "doWhileExample",
									"nameLocation": "431:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "451:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "446:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "446:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "445:12:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "479:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "479:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "478:6:0"
									},
									"scope": 51,
									"src": "422:258:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 52,
							"src": "60:623:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:652:0"
				},
				"id": 0
			}
		}
	}
}